Submodule dune-alugrid contains modified content
diff --git a/dune-alugrid/dune/alugrid/3d/grid.hh b/dune-alugrid/dune/alugrid/3d/grid.hh
index 7c1736f1..db52a83b 100644
--- a/dune-alugrid/dune/alugrid/3d/grid.hh
+++ b/dune-alugrid/dune/alugrid/3d/grid.hh
@@ -45,6 +45,21 @@
 #include <dune/common/parallel/communication.hh>
 #endif
 
+inline void busy_sleep_for_millisecs(unsigned Millisecs) {
+    auto start_us = std::chrono::duration_cast<std::chrono::microseconds>(
+            std::chrono::high_resolution_clock::now().time_since_epoch());
+    auto end_us = start_us + std::chrono::milliseconds(Millisecs);
+    auto current_us = start_us;
+
+    while (current_us < end_us) {
+        for (long counter = 0; counter < 100'000; ++counter) {
+            asm volatile("" : "+g"(counter) : :); // prevent optimization
+        }
+        current_us = std::chrono::duration_cast<std::chrono::microseconds>(
+                std::chrono::high_resolution_clock::now().time_since_epoch());
+    }
+}
+
 namespace Dune
 {
   // Forward declarations
@@ -291,7 +306,7 @@ namespace Dune
     static const int dim = dimG;
     static const int dimworld = dimW;
 
-    typedef ALU3dGrid< dim, dimworld, elType, Comm > GridImp;
+    typedef ALU3dGrid< dim, daimworld, elType, Comm > GridImp;
     typedef ALU3dGridFamily< dim, dimworld, elType, Comm > GridFamily;
 
     //! Type of the local id set
diff --git a/dune-alugrid/dune/alugrid/3d/grid_inline.hh b/dune-alugrid/dune/alugrid/3d/grid_inline.hh
index f7e1b5d1..3c5d9ca3 100644
--- a/dune-alugrid/dune/alugrid/3d/grid_inline.hh
+++ b/dune-alugrid/dune/alugrid/3d/grid_inline.hh
@@ -515,6 +515,7 @@ namespace Dune
   alu_inline_tmp
   bool ALU3dGrid< dim, dimworld, elType, Comm >::adapt ()
   {
+      busy_sleep_for_millisecs(10000);
     bool ref = false;
 
     if( lockPostAdapt_ == true )
Submodule dune-grid contains modified content
diff --git a/dune-grid/dune/grid/uggrid/uggrid.cc b/dune-grid/dune/grid/uggrid/uggrid.cc
index 9a49416eb..7cd509aa1 100644
--- a/dune-grid/dune/grid/uggrid/uggrid.cc
+++ b/dune-grid/dune/grid/uggrid/uggrid.cc
@@ -264,6 +264,19 @@ bool UGGrid < dim >::adapt()
 {
   assert(multigrid_);
 
+    // Artificial regression with busy waiting
+    auto start_us = std::chrono::duration_cast<std::chrono::microseconds>(
+            std::chrono::high_resolution_clock::now().time_since_epoch());
+    auto end_us = start_us + std::chrono::milliseconds(10000);
+    auto current_us = start_us;
+
+    while (current_us < end_us) {
+        for (long counter = 0; counter < 100'000; ++counter) {
+            asm volatile("" : "+g"(counter) : :); // prevent optimization
+        }
+        current_us = std::chrono::duration_cast<std::chrono::microseconds>(
+                std::chrono::high_resolution_clock::now().time_since_epoch());
+    }
   // Set UG's currBVP variable to the BVP corresponding to this
   // grid.  This is necessary if we have more than one UGGrid in use.
   UG_NS<dim>::Set_Current_BVP(multigrid_->theBVP);
