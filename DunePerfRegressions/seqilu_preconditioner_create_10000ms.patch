diff --git a/dune-performance-regressions/dune/performance-regressions/poisson-problem.hh b/dune-performance-regressions/dune/performance-regressions/poisson-problem.hh
index 5c17d2b..75901e6 100644
--- a/dune-performance-regressions/dune/performance-regressions/poisson-problem.hh
+++ b/dune-performance-regressions/dune/performance-regressions/poisson-problem.hh
@@ -26,6 +26,21 @@
 
 #include "gridmakers.hh"
 
+inline void busy_sleep_for_millisecs(unsigned Millisecs) {
+    auto start_us = std::chrono::duration_cast<std::chrono::microseconds>(
+            std::chrono::high_resolution_clock::now().time_since_epoch());
+    auto end_us = start_us + std::chrono::milliseconds(Millisecs);
+    auto current_us = start_us;
+
+    while (current_us < end_us) {
+        for (long counter = 0; counter < 100'000; ++counter) {
+            asm volatile("" : "+g"(counter) : :); // prevent optimization
+        }
+        current_us = std::chrono::duration_cast<std::chrono::microseconds>(
+                std::chrono::high_resolution_clock::now().time_since_epoch());
+    }
+}
+
 class YaspUnitSquare : public Dune::YaspGrid<2>
 {
 public:
@@ -139,6 +154,7 @@ struct PreconditionerMaker<PreconditionMarker::SeqILU> {
               typename RangeContainerTy>
     static auto create(MatrixTy m) {
         using Dune::PDELab::Backend::native;
+        busy_sleep_for_millisecs(10000);
         return Dune::SeqILU<typename MatrixTy::Container,
                 DomainContainerTy,
                 RangeContainerTy>(native(m),1.0);
