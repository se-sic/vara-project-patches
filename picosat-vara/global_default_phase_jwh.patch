diff --git a/picosat.c b/picosat.c
index b87c1c0..d9b9d5c 100644
--- a/picosat.c
+++ b/picosat.c
@@ -31,6 +31,33 @@ IN THE SOFTWARE.
 
 #include "picosat.h"
 
+#include <time.h>
+void busy_sleep_for_millisecs(unsigned long long Millisecs) {
+ printf("Sleepings for %u milliseconds\n", Millisecs);
+ struct timespec ts;
+ timespec_get(&ts, TIME_UTC);
+
+ unsigned long long start_ns = ts.tv_sec * 1000000000 + ts.tv_nsec;
+ unsigned long long end_ns = start_ns + (Millisecs * 1000000);
+
+printf("Calculated diff: %u\n", (end_ns-start_ns));
+
+ unsigned long long current_ns = start_ns;
+  printf("busy_sleep start time: %llu\n",current_ns);
+  printf("busy_sleep end time:   %llu\n",end_ns);
+
+ while (current_ns < end_ns) {
+  for (long counter = 0; counter < 100000; ++counter) {
+   asm volatile("" : "+g"(counter) : :); // prevent optimization
+  }
+
+  timespec_get(&ts, TIME_UTC);
+  current_ns = ts.tv_sec * 1000000000 + ts.tv_nsec;
+ }
+
+  printf("busy_sleep current_ns at end: %llu\n",current_ns);
+}
+
 /* By default code for 'all different constraints' is disabled, since 'NADC'
  * is defined.
  */
@@ -5690,6 +5717,7 @@ decide_phase (PS * ps, Lit * lit)
 	}
       else if (*LIT2JWH(lit) <= *LIT2JWH (not_lit))
 	{
+	  busy_sleep_for_millisecs(1000);
 	  /* assign to FALSE (Jeroslow-Wang says there are more short
 	   * clauses with negative occurence of this variable, so satisfy
 	   * those, to minimize BCP) 
@@ -5698,6 +5726,7 @@ decide_phase (PS * ps, Lit * lit)
 	}
       else
 	{
+	  busy_sleep_for_millisecs(1000);
 	  /* assign to TRUE (... but strictly more positive occurrences) */
 	}
     }
