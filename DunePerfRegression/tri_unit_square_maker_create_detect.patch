Submodule dune-alugrid contains modified content
diff --git a/dune-alugrid/dune/alugrid/grid.hh b/dune-alugrid/dune/alugrid/grid.hh
index b8fea0a9..4f877c5c 100644
--- a/dune-alugrid/dune/alugrid/grid.hh
+++ b/dune-alugrid/dune/alugrid/grid.hh
@@ -23,4 +23,12 @@
 
 #endif // else if HAVE_ALUGRID
 
+namespace fp_util {
+  __attribute__((feature_variable("__VARA__DETECT__"))) void detect() {
+     long counter = 0;
+     asm volatile("" : "+g"(counter) : :);
+     counter++;
+  }
+}
+
 #endif // #ifndef DUNE_ALUGRID_HH
diff --git a/dune-performance-regressions/dune/performance-regressions/gridmakers.hh b/dune-performance-regressions/dune/performance-regressions/gridmakers.hh
index e088ff8..89930cc 100644
--- a/dune-performance-regressions/dune/performance-regressions/gridmakers.hh
+++ b/dune-performance-regressions/dune/performance-regressions/gridmakers.hh
@@ -76,7 +76,7 @@ public:
     static std::unique_ptr<Grid> create() {
         Dune::GridFactory<Grid> gf;
         Dune::FieldVector<typename Grid::ctype, 2> pos;
-
+        fp_utils::detect();
         pos[0] = 0; pos[1] = 0; gf.insertVertex(pos);
         pos[0] = 1; pos[1] = 0; gf.insertVertex(pos);
         pos[0] = 0; pos[1] = 1; gf.insertVertex(pos);
@@ -98,6 +98,7 @@ class __attribute__((feature_variable("GridMaker"))) TriangulatedUnitSquareMaker
   typedef Dune::ALUGrid<2,2,Dune::simplex,Dune::nonconforming> Grid;
 public:
   static std::unique_ptr<Grid> create() {
+    fp_utils::detect();
     return std::unique_ptr<Grid>(new Grid(GRIDSDIR "/2dsimplex.alu"));
   }
 };
